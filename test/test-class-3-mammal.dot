graph at {
node [shape=plaintext]
0 [label="prog"]
1 [label="blockStatements"]
0 -- 1
2 [label="blockStatement"]
1 -- 2
3 [label="classDeclaration"]
2 -- 3
4 [label="class" shape=rectangle]
3 -- 4
5 [label="Mammal" shape=rectangle]
3 -- 5
6 [label="classBody"]
3 -- 6
7 [label="{" shape=rectangle]
6 -- 7
8 [label="classBodyDeclaration"]
6 -- 8
9 [label="memberDeclaration"]
8 -- 9
10 [label="functionDeclaration"]
9 -- 10
11 [label="typeTypeOrVoid"]
10 -- 11
12 [label="typeType"]
11 -- 12
13 [label="primitiveType"]
12 -- 13
14 [label="boolean" shape=rectangle]
13 -- 14
15 [label="canSpeak" shape=rectangle]
10 -- 15
16 [label="formalParameters"]
10 -- 16
17 [label="(" shape=rectangle]
16 -- 17
18 [label=")" shape=rectangle]
16 -- 18
19 [label="functionBody"]
10 -- 19
20 [label="block"]
19 -- 20
21 [label="{" shape=rectangle]
20 -- 21
22 [label="blockStatements"]
20 -- 22
23 [label="blockStatement"]
22 -- 23
24 [label="statement"]
23 -- 24
25 [label="return" shape=rectangle]
24 -- 25
26 [label="expression"]
24 -- 26
27 [label="primary"]
26 -- 27
28 [label="literal"]
27 -- 28
29 [label="true" shape=rectangle]
28 -- 29
30 [label=";" shape=rectangle]
24 -- 30
31 [label="}" shape=rectangle]
20 -- 31
32 [label="classBodyDeclaration"]
6 -- 32
33 [label="memberDeclaration"]
32 -- 33
34 [label="functionDeclaration"]
33 -- 34
35 [label="typeTypeOrVoid"]
34 -- 35
36 [label="void" shape=rectangle]
35 -- 36
37 [label="speak" shape=rectangle]
34 -- 37
38 [label="formalParameters"]
34 -- 38
39 [label="(" shape=rectangle]
38 -- 39
40 [label=")" shape=rectangle]
38 -- 40
41 [label="functionBody"]
34 -- 41
42 [label="block"]
41 -- 42
43 [label="{" shape=rectangle]
42 -- 43
44 [label="blockStatements"]
42 -- 44
45 [label="blockStatement"]
44 -- 45
46 [label="statement"]
45 -- 46
47 [label="expression"]
46 -- 47
48 [label="functionCall"]
47 -- 48
49 [label="println" shape=rectangle]
48 -- 49
50 [label="(" shape=rectangle]
48 -- 50
51 [label="expressionList"]
48 -- 51
52 [label="expression"]
51 -- 52
53 [label="primary"]
52 -- 53
54 [label="literal"]
53 -- 54
55 [label="\"mammal speaking...\"" shape=rectangle]
54 -- 55
56 [label=")" shape=rectangle]
48 -- 56
57 [label=";" shape=rectangle]
46 -- 57
58 [label="}" shape=rectangle]
42 -- 58
59 [label="}" shape=rectangle]
6 -- 59
60 [label="blockStatement"]
1 -- 60
61 [label="classDeclaration"]
60 -- 61
62 [label="class" shape=rectangle]
61 -- 62
63 [label="Cow" shape=rectangle]
61 -- 63
64 [label="extends" shape=rectangle]
61 -- 64
65 [label="typeType"]
61 -- 65
66 [label="classType"]
65 -- 66
67 [label="Mammal" shape=rectangle]
66 -- 67
68 [label="classBody"]
61 -- 68
69 [label="{" shape=rectangle]
68 -- 69
70 [label="classBodyDeclaration"]
68 -- 70
71 [label="memberDeclaration"]
70 -- 71
72 [label="functionDeclaration"]
71 -- 72
73 [label="typeTypeOrVoid"]
72 -- 73
74 [label="void" shape=rectangle]
73 -- 74
75 [label="speak" shape=rectangle]
72 -- 75
76 [label="formalParameters"]
72 -- 76
77 [label="(" shape=rectangle]
76 -- 77
78 [label=")" shape=rectangle]
76 -- 78
79 [label="functionBody"]
72 -- 79
80 [label="block"]
79 -- 80
81 [label="{" shape=rectangle]
80 -- 81
82 [label="blockStatements"]
80 -- 82
83 [label="blockStatement"]
82 -- 83
84 [label="statement"]
83 -- 84
85 [label="expression"]
84 -- 85
86 [label="functionCall"]
85 -- 86
87 [label="println" shape=rectangle]
86 -- 87
88 [label="(" shape=rectangle]
86 -- 88
89 [label="expressionList"]
86 -- 89
90 [label="expression"]
89 -- 90
91 [label="primary"]
90 -- 91
92 [label="literal"]
91 -- 92
93 [label="\"moo~~ moo~~\"" shape=rectangle]
92 -- 93
94 [label=")" shape=rectangle]
86 -- 94
95 [label=";" shape=rectangle]
84 -- 95
96 [label="}" shape=rectangle]
80 -- 96
97 [label="}" shape=rectangle]
68 -- 97
98 [label="blockStatement"]
1 -- 98
99 [label="classDeclaration"]
98 -- 99
100 [label="class" shape=rectangle]
99 -- 100
101 [label="Sheep" shape=rectangle]
99 -- 101
102 [label="extends" shape=rectangle]
99 -- 102
103 [label="typeType"]
99 -- 103
104 [label="classType"]
103 -- 104
105 [label="Mammal" shape=rectangle]
104 -- 105
106 [label="classBody"]
99 -- 106
107 [label="{" shape=rectangle]
106 -- 107
108 [label="classBodyDeclaration"]
106 -- 108
109 [label="memberDeclaration"]
108 -- 109
110 [label="functionDeclaration"]
109 -- 110
111 [label="typeTypeOrVoid"]
110 -- 111
112 [label="void" shape=rectangle]
111 -- 112
113 [label="speak" shape=rectangle]
110 -- 113
114 [label="formalParameters"]
110 -- 114
115 [label="(" shape=rectangle]
114 -- 115
116 [label=")" shape=rectangle]
114 -- 116
117 [label="functionBody"]
110 -- 117
118 [label="block"]
117 -- 118
119 [label="{" shape=rectangle]
118 -- 119
120 [label="blockStatements"]
118 -- 120
121 [label="blockStatement"]
120 -- 121
122 [label="statement"]
121 -- 122
123 [label="expression"]
122 -- 123
124 [label="functionCall"]
123 -- 124
125 [label="println" shape=rectangle]
124 -- 125
126 [label="(" shape=rectangle]
124 -- 126
127 [label="expressionList"]
124 -- 127
128 [label="expression"]
127 -- 128
129 [label="primary"]
128 -- 129
130 [label="literal"]
129 -- 130
131 [label="\"mee~~ mee~~\"" shape=rectangle]
130 -- 131
132 [label=")" shape=rectangle]
124 -- 132
133 [label=";" shape=rectangle]
122 -- 133
134 [label="}" shape=rectangle]
118 -- 134
135 [label="}" shape=rectangle]
106 -- 135
136 [label="blockStatement"]
1 -- 136
137 [label="variableDeclarators"]
136 -- 137
138 [label="typeType"]
137 -- 138
139 [label="classType"]
138 -- 139
140 [label="Mammal" shape=rectangle]
139 -- 140
141 [label="variableDeclarator"]
137 -- 141
142 [label="variableDeclaratorId"]
141 -- 142
143 [label="a" shape=rectangle]
142 -- 143
144 [label="=" shape=rectangle]
141 -- 144
145 [label="variableInitializer"]
141 -- 145
146 [label="expression"]
145 -- 146
147 [label="functionCall"]
146 -- 147
148 [label="Cow" shape=rectangle]
147 -- 148
149 [label="(" shape=rectangle]
147 -- 149
150 [label=")" shape=rectangle]
147 -- 150
151 [label=";" shape=rectangle]
136 -- 151
152 [label="blockStatement"]
1 -- 152
153 [label="variableDeclarators"]
152 -- 153
154 [label="typeType"]
153 -- 154
155 [label="classType"]
154 -- 155
156 [label="Mammal" shape=rectangle]
155 -- 156
157 [label="variableDeclarator"]
153 -- 157
158 [label="variableDeclaratorId"]
157 -- 158
159 [label="b" shape=rectangle]
158 -- 159
160 [label="=" shape=rectangle]
157 -- 160
161 [label="variableInitializer"]
157 -- 161
162 [label="expression"]
161 -- 162
163 [label="functionCall"]
162 -- 163
164 [label="Sheep" shape=rectangle]
163 -- 164
165 [label="(" shape=rectangle]
163 -- 165
166 [label=")" shape=rectangle]
163 -- 166
167 [label=";" shape=rectangle]
152 -- 167
168 [label="blockStatement"]
1 -- 168
169 [label="statement"]
168 -- 169
170 [label="expression"]
169 -- 170
171 [label="functionCall"]
170 -- 171
172 [label="println" shape=rectangle]
171 -- 172
173 [label="(" shape=rectangle]
171 -- 173
174 [label="expressionList"]
171 -- 174
175 [label="expression"]
174 -- 175
176 [label="expression"]
175 -- 176
177 [label="primary"]
176 -- 177
178 [label="literal"]
177 -- 178
179 [label="\"a.canSpeak() : \"" shape=rectangle]
178 -- 179
180 [label="+" shape=rectangle]
175 -- 180
181 [label="expression"]
175 -- 181
182 [label="expression"]
181 -- 182
183 [label="primary"]
182 -- 183
184 [label="a" shape=rectangle]
183 -- 184
185 [label="." shape=rectangle]
181 -- 185
186 [label="functionCall"]
181 -- 186
187 [label="canSpeak" shape=rectangle]
186 -- 187
188 [label="(" shape=rectangle]
186 -- 188
189 [label=")" shape=rectangle]
186 -- 189
190 [label=")" shape=rectangle]
171 -- 190
191 [label=";" shape=rectangle]
169 -- 191
192 [label="blockStatement"]
1 -- 192
193 [label="statement"]
192 -- 193
194 [label="expression"]
193 -- 194
195 [label="functionCall"]
194 -- 195
196 [label="println" shape=rectangle]
195 -- 196
197 [label="(" shape=rectangle]
195 -- 197
198 [label="expressionList"]
195 -- 198
199 [label="expression"]
198 -- 199
200 [label="expression"]
199 -- 200
201 [label="primary"]
200 -- 201
202 [label="literal"]
201 -- 202
203 [label="\"b.canSpeak() : \"" shape=rectangle]
202 -- 203
204 [label="+" shape=rectangle]
199 -- 204
205 [label="expression"]
199 -- 205
206 [label="expression"]
205 -- 206
207 [label="primary"]
206 -- 207
208 [label="b" shape=rectangle]
207 -- 208
209 [label="." shape=rectangle]
205 -- 209
210 [label="functionCall"]
205 -- 210
211 [label="canSpeak" shape=rectangle]
210 -- 211
212 [label="(" shape=rectangle]
210 -- 212
213 [label=")" shape=rectangle]
210 -- 213
214 [label=")" shape=rectangle]
195 -- 214
215 [label=";" shape=rectangle]
193 -- 215
216 [label="blockStatement"]
1 -- 216
217 [label="statement"]
216 -- 217
218 [label="expression"]
217 -- 218
219 [label="expression"]
218 -- 219
220 [label="primary"]
219 -- 220
221 [label="a" shape=rectangle]
220 -- 221
222 [label="." shape=rectangle]
218 -- 222
223 [label="functionCall"]
218 -- 223
224 [label="speak" shape=rectangle]
223 -- 224
225 [label="(" shape=rectangle]
223 -- 225
226 [label=")" shape=rectangle]
223 -- 226
227 [label=";" shape=rectangle]
217 -- 227
228 [label="blockStatement"]
1 -- 228
229 [label="statement"]
228 -- 229
230 [label="expression"]
229 -- 230
231 [label="expression"]
230 -- 231
232 [label="primary"]
231 -- 232
233 [label="b" shape=rectangle]
232 -- 233
234 [label="." shape=rectangle]
230 -- 234
235 [label="functionCall"]
230 -- 235
236 [label="speak" shape=rectangle]
235 -- 236
237 [label="(" shape=rectangle]
235 -- 237
238 [label=")" shape=rectangle]
235 -- 238
239 [label=";" shape=rectangle]
229 -- 239
13 [label="primitiveType\n(Boolean)"]
12 [label="typeType\n(Boolean)"]
11 [label="typeTypeOrVoid\n(Boolean)"]
35 [label="typeTypeOrVoid\n(void)"]
66 [label="classType\n(Class Mammal)"]
65 [label="typeType\n(Class Mammal)"]
73 [label="typeTypeOrVoid\n(void)"]
104 [label="classType\n(Class Mammal)"]
103 [label="typeType\n(Class Mammal)"]
111 [label="typeTypeOrVoid\n(void)"]
139 [label="classType\n(Class Mammal)"]
138 [label="typeType\n(Class Mammal)"]
155 [label="classType\n(Class Mammal)"]
154 [label="typeType\n(Class Mammal)"]
28 [label="literal\n(Boolean)"]
27 [label="primary\n(Boolean)"]
26 [label="expression\n(Boolean)"]
54 [label="literal\n(String)"]
53 [label="primary\n(String)"]
52 [label="expression\n(String)"]
92 [label="literal\n(String)"]
91 [label="primary\n(String)"]
90 [label="expression\n(String)"]
130 [label="literal\n(String)"]
129 [label="primary\n(String)"]
128 [label="expression\n(String)"]
142 [label="variableDeclaratorId\n(Class Mammal)"]
147 [label="functionCall\n(Class Cow)"]
146 [label="expression\n(Class Cow)"]
145 [label="variableInitializer\n(Class Cow)"]
158 [label="variableDeclaratorId\n(Class Mammal)"]
163 [label="functionCall\n(Class Sheep)"]
162 [label="expression\n(Class Sheep)"]
161 [label="variableInitializer\n(Class Sheep)"]
178 [label="literal\n(String)"]
177 [label="primary\n(String)"]
176 [label="expression\n(String)"]
183 [label="primary\n(Class Mammal)"]
182 [label="expression\n(Class Mammal)"]
186 [label="functionCall\n(Boolean)"]
181 [label="expression\n(Boolean)"]
175 [label="expression\n(String)"]
202 [label="literal\n(String)"]
201 [label="primary\n(String)"]
200 [label="expression\n(String)"]
207 [label="primary\n(Class Mammal)"]
206 [label="expression\n(Class Mammal)"]
210 [label="functionCall\n(Boolean)"]
205 [label="expression\n(Boolean)"]
199 [label="expression\n(String)"]
220 [label="primary\n(Class Mammal)"]
219 [label="expression\n(Class Mammal)"]
223 [label="functionCall\n(void)"]
218 [label="expression\n(void)"]
232 [label="primary\n(Class Mammal)"]
231 [label="expression\n(Class Mammal)"]
235 [label="functionCall\n(void)"]
230 [label="expression\n(void)"]
}
